ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF)) +
scale_fill_viridis(option = "inferno") +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, method = "gam") +
scale_fill_viridis(option = "inferno") +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, method = "auto") +
scale_fill_viridis(option = "inferno") +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, method = "gam") +
scale_fill_viridis(option = "inferno") +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE) +
scale_fill_viridis(option = "inferno") +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
# geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE) +
scale_fill_viridis(option = "inferno") +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
# geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE) +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
# geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, method = 'glm') +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
# geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, method = 'gam') +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
# geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), method = 'gam', se = TRUE) +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
# geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE) +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
# geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, level = 0.999) +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
# geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, level = 0.99999999) +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF, colour = "green"), se = TRUE) +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF, colour = "#00BFC4"), se = TRUE) +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, colour = "#00BBDB") +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
TP53_sites_ext_inBait
SortingIndexes = sort(TP53_sites_ext_inBait$score, decreasing = TRUE, index.return=TRUE)
SortingIndexes
TP53_sites_ext_inBait[SortingIndexes$ix]
top500scores = TP53_sites_ext_inBait[SortingIndexes$ix][1:500]
CompositeDF = CollectCompositeData(sampleSheet = Qinput, sample = MySample[1], genome = BSgenome.Mmusculus.UCSC.mm10, TFBSs = top500scores, minCytosines = 5, cores = 50)
colnames(CompositeDF)[2] = "SMF"
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, colour = "#00BBDB") +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
devtools::install("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/")
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, colour = "#00BBDB") +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
theme_classic()
plot(cars)
top500scores
CompositeDF
TF = "TP53"
n = 500
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, colour = "#00BBDB") +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
xlab("Coord relative to TFBS center") +
ggtitle(paste0("Top ", n, " bound ", TF)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
n = 50
CompositeDF = CollectCompositeData(sampleSheet = Qinput, sample = MySample[1], genome = BSgenome.Mmusculus.UCSC.mm10, TFBSs = top500scores, minCytosines = 5, cores = 50)
devtools::load_all()
CompositeDF = CollectCompositeData(sampleSheet = Qinput, sample = MySample[1], genome = BSgenome.Mmusculus.UCSC.mm10, TFBSs = top500scores, minCytosines = 5, cores = 50)
top500scores = TP53_sites_ext_inBait[SortingIndexes$ix][1:n]
CompositeDF = CollectCompositeData(sampleSheet = Qinput, sample = MySample[1], genome = BSgenome.Mmusculus.UCSC.mm10, TFBSs = top500scores, minCytosines = 5, cores = 50)
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, colour = "#00BBDB") +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
xlab("Coord relative to TFBS center") +
ggtitle(paste0("Top ", n, " bound ", TF)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
n = 500
top500scores = TP53_sites_ext_inBait[SortingIndexes$ix][1:n]
CompositeDF = CollectCompositeData(sampleSheet = Qinput, sample = MySample[1], genome = BSgenome.Mmusculus.UCSC.mm10, TFBSs = top500scores, minCytosines = 5, cores = 50)
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, colour = "#00BBDB") +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
xlab("Coord relative to TFBS center") +
ggtitle(paste0("Top ", n, " bound ", TF)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/TP53_composite.pdf", width = 7, height = 5)
CompositeDF
top500scores
n = length(top500scores)
top500scores
TF = unique(top500scores$name)
TF
TF = as.character(unique(top500scores$name))
TFBSs_covered = unique(CompositeDF$TFBS)
TFBSs_covered
TP53_sites_ext_inBait
TFBSs_covered
index = base::strsplit(TFBSs_covered, "_")[2]
index
TFBSs_covered
CompositeDF %>%
ggplot() +
geom_hex(aes(start, SMF)) +
geom_smooth(aes(start, SMF), se = TRUE, colour = "#00BBDB") +
scale_fill_viridis(option = "inferno") +
ylim(c(0,1)) +
xlab("Coord relative to TFBS center") +
ggtitle(paste0("Top ", n, " bound ", TF)) +
theme_classic() +
ggsave("/g/krebs/barzaghi/analyses/misc/TP53_check/TP53_composite.pdf", width = 7, height = 5)
current = 1
index = base::strsplit(TFBSs_covered[current], "_")[[2]]
base::strsplit(TFBSs_covered[current], "_")
index = base::strsplit(TFBSs_covered[current], "_")[[1]][2]
index
TFBSs_covered
TP53_sites_ext_inBait[index]
TP53_sites_ext_inBait
index
index = as.integer(base::strsplit(TFBSs_covered[current], "_")[[1]][2])
TP53_sites_ext_inBait[index]
SingleSiteMeth = CallContextMethylation(sampleSheet = Qinput, sample = MySample[1], genome = BSgenome.Mmusculus.UCSC.mm10, range = TP53_sites_ext_inBait[index], returnSM = FALSE)
SingleSiteMeth = CallContextMethylation(sampleSheet = Qinput, sample = MySample[1], genome = BSgenome.Mmusculus.UCSC.mm10, range = top500scores[index], returnSM = FALSE)
TP53_sites
top500scores[index]
TP53_sites[[names(top500scores[index])]]
TP53_sites[names(top500scores[index])]
SingleSiteMeth
PlotAvgSMF(MethGR = SingleSiteMeth, range = top500scores[index], TFBSs = TP53_sites[names(top500scores[index])])
names(top500scores[index])
pdf(paste0("/g/krebs/barzaghi/analyses/misc/TP53_check/SingleSite_TP53_", names(top500scores[index])))
PlotAvgSMF(MethGR = SingleSiteMeth, range = top500scores[index], TFBSs = TP53_sites[names(top500scores[index])])
dev.off()
pdf(paste0("/g/krebs/barzaghi/analyses/misc/TP53_check/SingleSite_TP53_", names(top500scores[index]), ".pdf"))
PlotAvgSMF(MethGR = SingleSiteMeth, range = top500scores[index], TFBSs = TP53_sites[names(top500scores[index])])
dev.off()
TFBSs_covered
seq(1, 100, 13)
TFBSs_covered
sample(1:length(TFBSs_covered), 7, replace = F)
for (current in sample(1:length(TFBSs_covered), 7, replace = F)){
index = as.integer(base::strsplit(TFBSs_covered[current], "_")[[1]][2])
SingleSiteMeth = CallContextMethylation(sampleSheet = Qinput, sample = MySample[1], genome = BSgenome.Mmusculus.UCSC.mm10, range = top500scores[index], returnSM = FALSE)
pdf(paste0("/g/krebs/barzaghi/analyses/misc/TP53_check/SingleSite_TP53_", names(top500scores[index]), ".pdf"))
PlotAvgSMF(MethGR = SingleSiteMeth, range = top500scores[index], TFBSs = TP53_sites[names(top500scores[index])])
dev.off()
}
devtools::load_all()
library(BSgenome.Mmusculus.UCSC.mm10)
library(SingleMoleculeFootprinting)
Qinput = system.file("extdata", "QuasR_input_pairs.txt", package = "SingleMoleculeFootprinting", mustWork = T)
suppressMessages(readr::read_delim(Qinput, delim = "\t"))
MySample = suppressMessages(readr::read_delim(Qinput, delim = "\t")[[2]])
Region_of_interest = GRanges(seqnames = "chr6", ranges = IRanges(start = 88106000, end = 88106500), strand = "*")
Methylation = CallContextMethylation(sampleSheet = Qinput,
sample = MySample,
genome = BSgenome.Mmusculus.UCSC.mm10,
range = Region_of_interest,
coverage = 20,
ConvRate.thr = 0.2)
PlotSM(MethSM = Methylation[[2]], range = Region_of_interest, SortedReads = "HC")
pdf("HC_SM.pdf")
PlotSM(MethSM = Methylation[[2]], range = Region_of_interest, SortedReads = "HC")
dev.off()
pdf("HC_SM.pdf")
PlotSM(MethSM = Methylation[[2]], range = Region_of_interest, SortedReads = "HC")
dev.off()
devtools::load_all()
rmarkdown::render("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/vignettes/SingleMoleculeFootprinting.Rmd",
output_dir = "/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/vignettes",
output_format = "html_document")
library(SingleMoleculeFootprinting)
library(BSgenome.Mmusculus.UCSC.mm10)
Qinput = system.file("extdata", "QuasR_input_pairs.txt", package = "SingleMoleculeFootprinting", mustWork = T)
MySample = suppressMessages(readr::read_delim(Qinput, delim = "\t")[[2]])
Region_of_interest = GRanges(seqnames = "chr6", ranges = IRanges(start = 88106000, end = 88106500), strand = "*")
Methylation = CallContextMethylation(sampleSheet = Qinput,
sample = MySample,
genome = BSgenome.Mmusculus.UCSC.mm10,
range = Region_of_interest,
coverage = 20,
ConvRate.thr = 0.8)
MethSM = Methylation[[2]]
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
hc=hclust(distance) # <----
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
hc=hclust(distance) # <----
dim(MethSM)
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
hc=hclust(distance) # <----
hc
ConvRate.thr = 0.8)
MethSM = Methylation[[2]]
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
hc=hclust(distance) # <----
library(SingleMoleculeFootprinting)
library(BSgenome.Mmusculus.UCSC.mm10)
Qinput = system.file("extdata", "QuasR_input_pairs.txt", package = "SingleMoleculeFootprinting", mustWork = T)
MySample = suppressMessages(readr::read_delim(Qinput, delim = "\t")[[2]])
Region_of_interest = GRanges(seqnames = "chr6", ranges = IRanges(start = 88106000, end = 88106500), strand = "*")
Methylation = CallContextMethylation(sampleSheet = Qinput,
sample = MySample,
genome = BSgenome.Mmusculus.UCSC.mm10,
range = Region_of_interest,
coverage = 20,
ConvRate.thr = 0.2) # 0.2 w/ v 3.6.2 | 0.8 w/ v 4.1.0
MethSM = Methylation[[2]]
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
hc=hclust(distance) # <----
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
hc=hclust(distance) # <----
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
hc=hclust(distance) # <----
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
hc=hclust(distance) # <----
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
hc=hclust(distance) # <----
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
hc=hclust(distance) # <----
while(TRUE){
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
hc=hclust(distance)
}
MethSM_subset
distance = dist(MethSM_subset)
hc=hclust(distance)
MethSM_subset
distance
distance[1:10,1:10]
dim(distance)
distance
head(distance)
hc=hclust(distance)
length(distance)
healthyMeth = MethSM[sample(dimnames(MethSM)[[1]],500),]
healthydistance = dist(healthyMeth)
hc=hclust(healthydistance)
healthyMeth
colMeans(MethSM_subset)
colMeans(healthyMeth)
dim(MethSM_subset)
dim(healthyMeth)
length(distance)
length(healthydistance)
mean(distance)
mean(healthydistance)
sum(is.na(distance))
sum(is.na((healthydistance))
)
which(is.na(distance))
colMeans(MethSM_subset, na.rm = TRUE)
colMeans(healthyMeth, na.rm = TRUE)
rowMeans(MethSM_subset, na.rm = TRUE)
sum(is.na(rowMeans(MethSM_subset, na.rm = TRUE)))
sum(is.na(rowMeans(healthyMeth, na.rm = TRUE)))
?complete.cases()
?complete.cases
rowMeans(is.na(MethSM_subset))
rowMeans(is.na(MethSM_subset)) == 1
sum(rowMeans(is.na(MethSM_subset)) == 1)
is.na(MethSM_subset)[1:10,1:10]
rowMeans(is.na(MethSM_subset)[1:10,1:10])
rowSums(is.na(MethSM_subset)[1:10,1:10])
is.na(MethSM_subset)[1:10,1:20]
is.na(MethSM_subset)[1:20,1:10]
is.na(MethSM_subset)[30:50,1:10]
rowMeans(is.na(MethSM_subset)[30:50,1:10])
rowMeans(is.na(MethSM_subset)[30:50,1:10]) > 0.9
#
rowMeans(is.na(MethSM_subset)) > 0.9
#
sum(rowMeans(is.na(MethSM_subset)) > 0.9)
#
sum(rowMeans(is.na(MethSM_subset)) > 0.5)
sum(rowMeans(is.na(healthydistance)) > 0.5)
sum(rowMeans(is.na(healthydistance)) > 0.5)
sum(rowMeans(is.na(MethSM_subset)) > 0.5)
sum(rowMeans(is.na(healthyMeth)) > 0.5)
#
sum(rowMeans(is.na(MethSM_subset)) > 0.9)
sum(rowMeans(is.na(healthyMeth)) > 0.9)
sum(rowMeans(is.na(MethSM_subset)) == 1)
sum(rowMeans(is.na(healthyMeth)) == 1)
sum(is.na(healthydistance))
sum(is.na(distance))
length(distance)
nrow(MethSM_subset)
(500*499)/2
which(is.na(distance))
?dist
distance = dist(MethSM_subset)
which(is.na(distance))
which(is.na(rowMeans(MethSM_subset)))
#
sum(rowMeans(is.na(MethSM_subset)) == 1)
sum(is.na(distance)) > 0
devtools::load_all()
while(TRUE){
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
while(sum(is.na(distance)) > 0){ # sometimes dist between some pair of reads is NA, possibly because of no overlapping Cs
print("again")
distance = dist(MethSM_subset)
}
hc=hclust(distance)
print("this worked")
}
while(TRUE){
if(nrow(MethSM) > 500){ #subset to 500 molecules to avoid problem with Hc
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
}else{
MethSM_subset = MethSM
}
distance = dist(MethSM_subset)
while(sum(is.na(distance)) > 0){ # sometimes dist between some pair of reads is NA, possibly because of no overlapping Cs
print("again")
MethSM_subset = MethSM[sample(dimnames(MethSM)[[1]],500),]
distance = dist(MethSM_subset)
}
hc=hclust(distance)
print("this worked")
}
rmarkdown::render("/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/vignettes/SingleMoleculeFootprinting.Rmd",
output_dir = "/g/krebs/barzaghi/Rscripts/R_package/SingleMoleculeFootprinting/vignettes",
output_format = "html_document")
#### bait regions bed --> GRanges
BaitRegions = import(system.file("extdata", "mm10_baits.bed.gz", package = "SingleMoleculeFootprinting", mustWork = T), format="bed")
#### bait regions bed --> GRanges
BaitRegions = rtracklayer::import(system.file("extdata", "mm10_baits.bed.gz", package = "SingleMoleculeFootprinting", mustWork = T), format="bed")
BaitRegions
unique(BaitRegions$name)
unique(BaitRegions$score)
seqlevels(BaitRegions) = paste0("chr", seqlevels(BaitRegions))
#### bait regions bed --> GRanges
library(GenomicRanges)
seqlevels(BaitRegions) = paste0("chr", seqlevels(BaitRegions))
BaitRegions
saveRDS(BaitRegions, "/g/krebs/barzaghi/Rscripts/R_package/BaitRegions_mm10.rds")
AllC = readRDS("../AllCreduced.rds")
AllC
ReducedRefMat = readRDS("../ReducedRefMat.rds")
ReducedRefMat[1:10,1:10]
ReducedRefMat
data.class(ReducedRefMat)
data.class(AllC)
data.class(BaitRegions)
colnames(ReducedRefMat)
BiocManager::install("BiocCheck")
BiocManager::install("BiocCheck")
BiocCheck::BiocCheck()
BiocCheck::BiocCheck()
